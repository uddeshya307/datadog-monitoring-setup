apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.datadog.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.datadog.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.datadog.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.datadog.name }}
    spec:
      serviceAccountName: datadog-agent 
      containers:
        - name: {{ .Values.datadog.name }}
          image: gcr.io/datadoghq/agent:latest
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: datadog-secret
                  key: api-key
            - name: DD_SITE
              value: "us5.datadoghq.com"
            - name: DD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName     
            - name: DD_CLUSTER_NAME
              value: minikube-cluster
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: DD_CONTAINER_EXCLUDE
              value: name:datadog-agent  
            - name: DD_CONTAINER_LOGS
              value: 'true'
            - name: DD_KUBERNETES_KUBELET_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: DD_KUBELET_TLS_VERIFY
              value: 'false'              
          resources:
            limits:
              memory: 512Mi
              cpu: 500m
          volumeMounts:
            - name: dockersocket
              mountPath: /var/run/docker.sock
              readOnly: true
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: cgroups
              mountPath: /host/sys/fs/cgroup
              readOnly: true
            - name: logs
              mountPath: /var/log/pods
              readOnly: true
            - name: containers
              mountPath: /var/lib/docker/containers
              readOnly: true             
      volumes:
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
        - name: proc
          hostPath:
            path: /proc
        - name: cgroups
          hostPath:
            path: /sys/fs/cgroup
        - name: logs
          hostPath:
            path: /var/log/pods
        - name: containers
          hostPath:
            path: /var/lib/docker/containers
